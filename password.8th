#! /usr/bin/env 8th
\ vim: ft=8th:
\

needs rand/range

"1234567890" var, numbers
"abcdefghijklmnopqrtstuwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" var, letters
"!Â£$%^&*" var, symbols
"" var, password
"" var, pstring
"" var, passwordstring
a:new var, array 
var, numberOfLetters
var, numberOfSymbols
var, numberOfNumbers

\ numbers @ symbols @ s:+ letters @ s:+ .

: selectItem
  \ s-- (letters,numbers,symbols) 
  "in select" . cr
  s:len \ s1--s1n 
  .s 
  1 swap      \ s1n -- s1nn
  .s
  rand-range \ s1nn--s1n
  .s
  pstring @ dup \ --s1nss
  .s
  "selectIteem" . cr
  .s
  rot  \ --s1ssn
  s:@ >s s:append \ --s1ssc -- s1ss+
  ! 
  drop
;


: getRandomCharacters 
  "getRandom" . cr
    7 11 rand-range numberOfLetters !
    2 5 rand-range numberOfNumbers !
    1 3 rand-range numberOfSymbols !
    
    numberOfLetters @ 
    repeat
      letters @ s:len
      1 swap rand-range 
      s:@ 
      pstring @ swap s:+ pstring !
      drop
      \ swap . cr
      n:1-
    while

    numberOfNumbers @ 
    repeat
      numbers @ s:len
      1 swap rand-range 
      s:@ 
      pstring @ swap s:+ pstring !
      drop
      \ swap . cr
      n:1-
    while

    \ numberOfSymbols @ 
    \ repeat

    \   symbols @ s:len
    \   1 swap rand-range 
    \   s:@ 
    \   pstring @ swap s:+ pstring !
    \   drop
    \   \ swap . cr
    \   n:1-
    \ while
    \ .s
  \ ' selectItem 1 numberOfLetters loop
  \   numbers @
  \ ' selectItem numberOfNumbers times
  \   symbols @ 
  \ ' selectItem numberOfSymbols times
  
;

: char>s
  swap s:+
;

: array2string
  \ a-- 
  "In" . 
  pstring @ \ --as
  
  swap      \ --sa
  a:len     \ --san
  \ .s
  repeat
    \ "in loop" . cr
    dup     \ --sann
    \ " dupped" . cr 
    \ .s
    rot swap  \ --snan
    \ "rot swap" . cr 
    \ .s
    a:@     \ --snai
    \ "fetched" . cr
    \ .s
    4 roll >s swap \ --nasi
    \ .s
    s:+       \ --nas+
    \ "added to string" . cr
    \ .s
    \ drop
    swap rot  \ -- s+an.
    \ .s
    n:1-
    \ .s
  while drop .s
  swap passwordstring !
  2drop
  "array2string" .
  .s
;



: string2array
  \ s--
  
  ( array @ swap a:push ) s:each! 
    G:reset \ clear stack
;

: randomiseArray
\ a--a
  a:shuffle 
  array !
;

: app:main
  \ letters  @
  \ selectItem .
  getRandomCharacters
  pstring @ dup . cr
  string2array "out" . 
  array @ dup . cr
  randomiseArray
  array @ dup . cr
  \ array2string 
  pstring @ 
  \ passwordstring @ \ password string
  

  \ s:base64>
  
  "Password:   " . (puts) cr 
  bye 
; 
